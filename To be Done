//------------------------------------------------------------------------------------------------------------------------------------
     int rows = 3, cols = 5;
     double **x;

     //void allocMatrix(rows,cols){
          x = new double*[rows];

          for(int i = 0; i < rows; i++){
              x[i] = new double[cols]; 
          }
     //}

     for(int i = 0; i < rows; i++) {
         for(int j = 0; j < cols; j++) {
	     x[i][j] = i;
         }
     }

     std::cout << "Number of Iterations: " << ITER << std::endl;
     std::cout << "Path of Files       : " << PATH << std::endl;

     for (int i = 0; i < rows; ++i) {
	  for (int j = 0; j < cols; ++j)
	       std::cout << x[i][j] << "\t";
          std::cout << std::endl;
     }

     for (int i = 0; i < rows; i++) {
          delete [] x[i]; 
     }
     delete [] x;
//------------------------------------------------------------------------------------------------------------------------------------

     //std::ifstream infile;
          //int Nn;
	  //infile >> Nn;

          std::string COORDINATES = PATH;
          COORDINATES.append("/Coordinates.txt");
          std::cout << "Reading: '" << COORDINATES << "'" << std::endl;

          std::string ELEMENTS = PATH;
          ELEMENTS.append("/Elements.txt");
          std::cout << "Reading: '" << ELEMENTS << "'" << std::endl;

/*
//------------------------------------------------------------------------------------------------------------------------------------
// READS AND SAVE COORDINATES DATA: 
//------------------------------------------------------------------------------------------------------------------------------------
     std::string COORDINATES = PATH;
     COORDINATES.append("/Coordinates.txt");

     std::ifstream INFILE(COORDINATES.c_str()); 

	int rows;
        int cols;

	INFILE >> rows >> cols;

      //Memory Allocation for Coordinates:
        Coordinates = new double* [rows];

        for(int i = 0; i < rows; i++){
            Coordinates[i] = new double[cols]; 
        }

      //Save Values in Coordinates:
	for(int i = 0; i < rows; i++){
	    INFILE >> Coordinates[i][0] >> Coordinates[i][1] >> Coordinates[i][2];
	} 

     INFILE.close(); 
*/
//------------------------------------------------------------------------------------------------------------------------------------
// READS AND SAVE ELEMENTS DATA: 
//------------------------------------------------------------------------------------------------------------------------------------
